# 
# testprogs-y := example
# Will compile example.c and create an executable named example
#
# testprogs-y := test1
# test1-y := main.o helper.o

__testprogs := $(sort $(testprogs-y))

# Executables compiled from a single .c file
test-csingle := $(foreach m,$(__testprogs),$(if $($(m)-y),,$(m)))

# Executables linked based on several .o files
test-cmulti := $(foreach m,$(__testprogs), $(if $($(m)-y),$(m)))

# Object (.o) files compiled from .c files
test-cobjs := $(sort $(foreach m,$(__testprogs),$($(m)-y)))

__obj_fixed := $(patsubst %/,%,$(obj))
__src_fixed := $(patsubst %/,%,$(src))

# Add $(obj) prefix to all paths
test-csingle := $(addprefix $(__obj_fixed)/,$(test-csingle))
test-cmulti  := $(addprefix $(__obj_fixed)/,$(test-cmulti))
test-cobjs   := $(addprefix $(__obj_fixed)/,$(test-cobjs))

# Options to testcc.
testc_flags = -Wp,-MD,$(depfile) $(KBUILD_CFLAGS) $(KBUILD_CPPFLAGS) \
	      $(USERINCLUDE) $(TEST_CFLAGS) -I. -I../ \
	      -include $(srctree)/sys/$(PLATFORM)/platform.h

testld_flags = 
testld_builtin = sys/built-in.o mem/built-in.o arch/$(SRCARCH)/built-in.o
testld_libs = $(KBUILD_LIBS)

# test-csingle -> executable
quiet_cmd_test-csingle = CC      $@
      cmd_test-csingle = $(CC) $(testc_flags) -o $@ $< $(testld_builtin) \
                               $(testld_libs)
#$(test-csingle): $(obj)/%: $(src)/%.c FORCE
#	echo "test-csingle: $@ $< $@.c $*"
#	$(call if_changed_dep,test-csingle)

$(test-csingle): $(__obj_fixed)/%: $(__src_fixed)/%.c FORCE
	$(call if_changed_dep,test-csingle)

# test-cobjs -> .o
quiet_cmd_test-cobjs	= CC      $@
      cmd_test-cobjs	= $(CC) $(testc_flags) -c -o $@ $< 

$(test-cobjs): $(__obj_fixed)/%.o: $(__src_fixed)/%.c FORCE
	$(call if_changed_dep,test-cobjs)

# Link an executable based on list of .o files
quiet_cmd_test-cmulti	= LD      $@
      cmd_test-cmulti	= $(LD) $(testld_flags) -o $@ \
			  $(addprefix $(obj)/,$($(@F)-y)) $(testld_builtin) \
      			  $(testld_libs)
$(test-cmulti): $(__obj_fixed)/%: $(test-cobjs) FORCE
	$(call if_changed,test-cmulti)

# clean support
targets += $(test-csingle) $(test-cmulti) $(test-cobjs)
always += $(test-csingle) $(test-cmulti)
